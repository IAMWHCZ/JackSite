// <auto-generated />
using System;
using JackSite.YarpApi.Gateway.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JackSite.YarpApi.Gateway.Migrations
{
    [DbContext(typeof(GatewayDbContext))]
    partial class GatewayDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.15");

            modelBuilder.Entity("JackSite.YarpApi.Gateway.Entities.RequestLog", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("ClientIp")
                        .HasColumnType("TEXT")
                        .HasColumnName("client_ip");

                    b.Property<long>("CreateAt")
                        .HasColumnType("INTEGER")
                        .HasColumnName("create_at");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_time");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("TEXT")
                        .HasColumnName("error_message");

                    b.Property<long>("ExecutionTime")
                        .HasColumnType("INTEGER")
                        .HasColumnName("execution_time");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("method");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("path");

                    b.Property<string>("QueryString")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("query_string");

                    b.Property<string>("RequestBody")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("request_body");

                    b.Property<string>("RequestHeaders")
                        .HasColumnType("TEXT")
                        .HasColumnName("request_headers");

                    b.Property<DateTime>("RequestTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("request_time");

                    b.Property<string>("ResponseBody")
                        .HasColumnType("TEXT")
                        .HasColumnName("response_body");

                    b.Property<string>("ResponseHeaders")
                        .HasColumnType("TEXT")
                        .HasColumnName("response_headers");

                    b.Property<DateTime>("ResponseTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("response_time");

                    b.Property<string>("StackTrace")
                        .HasColumnType("TEXT")
                        .HasColumnName("stack_trace");

                    b.Property<int>("StatusCode")
                        .HasColumnType("INTEGER")
                        .HasColumnName("status_code");

                    b.Property<string>("TargetService")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("target_service");

                    b.Property<long?>("UpdateAt")
                        .HasColumnType("INTEGER")
                        .HasColumnName("update_at");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_time");

                    b.Property<string>("UserAgent")
                        .HasColumnType("TEXT")
                        .HasColumnName("user_agent");

                    b.HasKey("Id")
                        .HasName("pk_request_logs");

                    b.ToTable("request_logs");
                });

            modelBuilder.Entity("JackSite.YarpApi.Gateway.Entities.YarpConfig", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("ConfigJson")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("config_json");

                    b.Property<long>("CreateAt")
                        .HasColumnType("INTEGER")
                        .HasColumnName("create_at");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_time");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_active");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT")
                        .HasColumnName("last_modified");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<long?>("UpdateAt")
                        .HasColumnType("INTEGER")
                        .HasColumnName("update_at");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_time");

                    b.HasKey("Id")
                        .HasName("pk_yarp_configs");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("ix_yarp_configs_is_active");

                    b.ToTable("yarp_configs");
                });
#pragma warning restore 612, 618
        }
    }
}
