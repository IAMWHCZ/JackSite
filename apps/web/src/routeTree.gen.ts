/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignatureImport } from './routes/signature'
import { Route as IndexImport } from './routes/index'
import { Route as SqlSqlToDiagramImport } from './routes/sql/sql-to-diagram'
import { Route as SqlSqlConverterImport } from './routes/sql/sql-converter'
import { Route as JsonJsonFormatImport } from './routes/json/json-format'

// Create/Update Routes

const SignatureRoute = SignatureImport.update({
  id: '/signature',
  path: '/signature',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SqlSqlToDiagramRoute = SqlSqlToDiagramImport.update({
  id: '/sql/sql-to-diagram',
  path: '/sql/sql-to-diagram',
  getParentRoute: () => rootRoute,
} as any)

const SqlSqlConverterRoute = SqlSqlConverterImport.update({
  id: '/sql/sql-converter',
  path: '/sql/sql-converter',
  getParentRoute: () => rootRoute,
} as any)

const JsonJsonFormatRoute = JsonJsonFormatImport.update({
  id: '/json/json-format',
  path: '/json/json-format',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/signature': {
      id: '/signature'
      path: '/signature'
      fullPath: '/signature'
      preLoaderRoute: typeof SignatureImport
      parentRoute: typeof rootRoute
    }
    '/json/json-format': {
      id: '/json/json-format'
      path: '/json/json-format'
      fullPath: '/json/json-format'
      preLoaderRoute: typeof JsonJsonFormatImport
      parentRoute: typeof rootRoute
    }
    '/sql/sql-converter': {
      id: '/sql/sql-converter'
      path: '/sql/sql-converter'
      fullPath: '/sql/sql-converter'
      preLoaderRoute: typeof SqlSqlConverterImport
      parentRoute: typeof rootRoute
    }
    '/sql/sql-to-diagram': {
      id: '/sql/sql-to-diagram'
      path: '/sql/sql-to-diagram'
      fullPath: '/sql/sql-to-diagram'
      preLoaderRoute: typeof SqlSqlToDiagramImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/signature': typeof SignatureRoute
  '/json/json-format': typeof JsonJsonFormatRoute
  '/sql/sql-converter': typeof SqlSqlConverterRoute
  '/sql/sql-to-diagram': typeof SqlSqlToDiagramRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/signature': typeof SignatureRoute
  '/json/json-format': typeof JsonJsonFormatRoute
  '/sql/sql-converter': typeof SqlSqlConverterRoute
  '/sql/sql-to-diagram': typeof SqlSqlToDiagramRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/signature': typeof SignatureRoute
  '/json/json-format': typeof JsonJsonFormatRoute
  '/sql/sql-converter': typeof SqlSqlConverterRoute
  '/sql/sql-to-diagram': typeof SqlSqlToDiagramRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/signature'
    | '/json/json-format'
    | '/sql/sql-converter'
    | '/sql/sql-to-diagram'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/signature'
    | '/json/json-format'
    | '/sql/sql-converter'
    | '/sql/sql-to-diagram'
  id:
    | '__root__'
    | '/'
    | '/signature'
    | '/json/json-format'
    | '/sql/sql-converter'
    | '/sql/sql-to-diagram'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SignatureRoute: typeof SignatureRoute
  JsonJsonFormatRoute: typeof JsonJsonFormatRoute
  SqlSqlConverterRoute: typeof SqlSqlConverterRoute
  SqlSqlToDiagramRoute: typeof SqlSqlToDiagramRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SignatureRoute: SignatureRoute,
  JsonJsonFormatRoute: JsonJsonFormatRoute,
  SqlSqlConverterRoute: SqlSqlConverterRoute,
  SqlSqlToDiagramRoute: SqlSqlToDiagramRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/signature",
        "/json/json-format",
        "/sql/sql-converter",
        "/sql/sql-to-diagram"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/signature": {
      "filePath": "signature.tsx"
    },
    "/json/json-format": {
      "filePath": "json/json-format.tsx"
    },
    "/sql/sql-converter": {
      "filePath": "sql/sql-converter.tsx"
    },
    "/sql/sql-to-diagram": {
      "filePath": "sql/sql-to-diagram.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
